{"name":"ExcelPlus","tagline":"A cross-browser solution to read an Excel file","body":"### Cross-browser reader for Excel files\r\n\r\nThis solution can use ActiveX for old IE browsers, or [XSLX.js](http://blog.innovatejs.com/?tag=xlsx-js) (attention make sure you have a version [that supports IE8](https://github.com/stephen-hardy/xlsx.js/pull/25)).\r\n\r\nIt will relay on the FileAPI for modern browser or on Flash for older browsers (using [FileToDataURI project](http://aymkdn.github.io/FileToDataURI/)).\r\n\r\nThe idea is to combine everything to be easy to use, and with a documentation.\r\n\r\n## Quick Start\r\n\r\nAdd the below code into your page:\r\n`\r\n<script type=\"text/javascript\" src=\"../Global%20Documents/js/xlsx.js\"></script>\r\n<script type=\"text/javascript\" src=\"../Global%20Documents/js/jszip/jszip-all.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"../Global%20Documents/js/excelplus-2.0.js\"></script>\r\n<object id=\"file-excel\" />\r\n<script>\r\nvar oExcel = new ExcelPlus();\r\n// create a button to open a remote file\r\noExcel.openRemote({\r\n  idButton:'file-excel',\r\n  flashPath:'/some/where/swfobject/',\r\n  readCallback:function(name,base64) {\r\n    console.log(this.getSheetNames()); // list of the worksheets\r\n    // if there are several sheets you need to define which one to read:\r\n    if (this.nbSheets > 1) this.activeSheet(1); // the first sheet is the one to read\r\n    // you can show the sheet names with : `this.getSheetNames()`\r\n   console.log(\"Value in the cell A2 - \"+this.read(\"A2\"));\r\n   console.log(\"Values in the cells A1:B3 - \"+this.read(\"A1:B3\"));\r\n   // we can also get the full sheet content into a 2D-array with `this.readAll()`\r\n  }\r\n})\r\n</script>\r\n`","google":"UA-30296916-4","note":"Don't delete this file! It's used internally to help with page regeneration."}